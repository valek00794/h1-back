"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.container = void 0;
const inversify_1 = require("inversify");
require("reflect-metadata");
const authController_1 = require("./controllers/authController");
const blogsController_1 = require("./controllers/blogsController");
const commentsController_1 = require("./controllers/commentsController");
const postsController_1 = require("./controllers/postsController");
const usersController_1 = require("./controllers/usersController");
const usersDevicesController_1 = require("./controllers/usersDevicesController");
const blogs_query_repository_1 = require("./repositories/blogs-query-repository");
const blogs_repository_1 = require("./repositories/blogs-repository");
const comments_query_repository_1 = require("./repositories/comments-query-repository");
const comments_repository_1 = require("./repositories/comments-repository");
const likes_query_repository_1 = require("./repositories/likes-query-repository");
const likes_repository_1 = require("./repositories/likes-repository");
const posts_query_repository_1 = require("./repositories/posts-query-repository");
const posts_repository_1 = require("./repositories/posts-repository");
const users_query_repository_1 = require("./repositories/users-query-repository");
const users_repository_1 = require("./repositories/users-repository");
const usersDevices_query_repository_1 = require("./repositories/usersDevices-query-repository");
const usersDevices_repository_1 = require("./repositories/usersDevices-repository");
const auth_service_1 = require("./services/auth-service");
const blogs_service_1 = require("./services/blogs-service");
const comments_service_1 = require("./services/comments-service");
const likes_service_1 = require("./services/likes-service");
const posts_service_1 = require("./services/posts-service");
const users_service_1 = require("./services/users-service");
const usersDevices_service_1 = require("./services/usersDevices-service");
exports.container = new inversify_1.Container();
exports.container.bind(blogsController_1.BlogsController).to(blogsController_1.BlogsController);
exports.container.bind(blogs_service_1.BlogsService).to(blogs_service_1.BlogsService);
exports.container.bind(blogs_repository_1.BlogsRepository).to(blogs_repository_1.BlogsRepository);
exports.container.bind(blogs_query_repository_1.BlogsQueryRepository).to(blogs_query_repository_1.BlogsQueryRepository);
exports.container.bind(commentsController_1.CommentsController).to(commentsController_1.CommentsController);
exports.container.bind(comments_service_1.CommentsService).to(comments_service_1.CommentsService);
exports.container.bind(comments_repository_1.CommentsRepository).to(comments_repository_1.CommentsRepository);
exports.container.bind(comments_query_repository_1.CommentsQueryRepository).to(comments_query_repository_1.CommentsQueryRepository);
exports.container.bind(postsController_1.PostsController).to(postsController_1.PostsController);
exports.container.bind(posts_service_1.PostsService).to(posts_service_1.PostsService);
exports.container.bind(posts_repository_1.PostsRepository).to(posts_repository_1.PostsRepository);
exports.container.bind(posts_query_repository_1.PostsQueryRepository).to(posts_query_repository_1.PostsQueryRepository);
exports.container.bind(usersController_1.UsersController).to(usersController_1.UsersController);
exports.container.bind(users_service_1.UsersService).to(users_service_1.UsersService);
exports.container.bind(users_repository_1.UsersRepository).to(users_repository_1.UsersRepository);
exports.container.bind(users_query_repository_1.UsersQueryRepository).to(users_query_repository_1.UsersQueryRepository);
exports.container.bind(authController_1.AuthController).to(authController_1.AuthController);
exports.container.bind(auth_service_1.AuthService).to(auth_service_1.AuthService);
exports.container.bind(usersDevicesController_1.UsersDevicesController).to(usersDevicesController_1.UsersDevicesController);
exports.container.bind(usersDevices_service_1.UsersDevicesService).to(usersDevices_service_1.UsersDevicesService);
exports.container.bind(usersDevices_repository_1.UsersDevicesRepository).to(usersDevices_repository_1.UsersDevicesRepository);
exports.container.bind(usersDevices_query_repository_1.UsersDevicesQueryRepository).to(usersDevices_query_repository_1.UsersDevicesQueryRepository);
exports.container.bind(likes_service_1.LikesService).to(likes_service_1.LikesService);
exports.container.bind(likes_repository_1.LikesRepository).to(likes_repository_1.LikesRepository);
exports.container.bind(likes_query_repository_1.LikesQueryRepository).to(likes_query_repository_1.LikesQueryRepository);
