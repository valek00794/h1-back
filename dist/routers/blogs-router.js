"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.blogsRouter = void 0;
const express_1 = require("express");
const blogsInputValidation_1 = require("../validation/blogsInputValidation");
const inputValidationMiddleware_1 = require("../middlewares/inputValidationMiddleware");
const postsInputValidation_1 = require("../validation/postsInputValidation");
const authMiddleware_1 = require("../middlewares/authMiddleware");
const composition_root_1 = require("../composition-root");
const userIdFromJWTMiddleware_1 = require("../middlewares/userIdFromJWTMiddleware");
const blogsController_1 = require("../controllers/blogsController");
const postsController_1 = require("../controllers/postsController");
const blogsController = composition_root_1.container.resolve(blogsController_1.BlogsController);
const postsController = composition_root_1.container.resolve(postsController_1.PostsController);
exports.blogsRouter = (0, express_1.Router)();
exports.blogsRouter.get('/', blogsController.getBlogsController.bind(blogsController));
exports.blogsRouter.get('/:id', blogsController.findBlogController.bind(blogsController));
exports.blogsRouter.get('/:blogId/posts', userIdFromJWTMiddleware_1.userIdFromJWTMiddleware, postsController.findPostsOfBlogController.bind(postsController));
exports.blogsRouter.post('/:blogId/posts', authMiddleware_1.authMiddleware, postsInputValidation_1.postsInputValidation, inputValidationMiddleware_1.inputValidationMiddleware, postsController.createPostForBlogController.bind(postsController));
exports.blogsRouter.post('/', authMiddleware_1.authMiddleware, blogsInputValidation_1.blogsInputValidation, inputValidationMiddleware_1.inputValidationMiddleware, blogsController.createBlogController.bind(blogsController));
exports.blogsRouter.put('/:id', authMiddleware_1.authMiddleware, blogsInputValidation_1.blogsInputValidation, inputValidationMiddleware_1.inputValidationMiddleware, blogsController.updateBlogController.bind(blogsController));
exports.blogsRouter.delete('/:id', authMiddleware_1.authMiddleware, blogsController.deleteBlogController.bind(blogsController));
