"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.authRouter = void 0;
const express_1 = require("express");
const authInputValidation_1 = require("../validation/authInputValidation");
const inputValidationMiddleware_1 = require("../middlewares/inputValidationMiddleware");
const authJWTMiddleware_1 = require("../middlewares/authJWTMiddleware");
const usersInputValidation_1 = require("../validation/usersInputValidation");
const apiRequestsLogMiddleware_1 = require("../middlewares/apiRequestsLogMiddleware");
const composition_root_1 = require("../composition-root");
exports.authRouter = (0, express_1.Router)();
exports.authRouter.post('/login', apiRequestsLogMiddleware_1.apiRequestsLogMiddleware, apiRequestsLogMiddleware_1.apiRequestsCounterMiddleware, authInputValidation_1.authInputValidation, inputValidationMiddleware_1.inputValidationMiddleware, composition_root_1.authController.signInController.bind(composition_root_1.authController));
exports.authRouter.get('/me', authJWTMiddleware_1.authJWTMiddleware, composition_root_1.authController.getAuthInfoController.bind(composition_root_1.authController));
exports.authRouter.post('/registration', apiRequestsLogMiddleware_1.apiRequestsLogMiddleware, apiRequestsLogMiddleware_1.apiRequestsCounterMiddleware, usersInputValidation_1.userDataInputValidation, inputValidationMiddleware_1.inputValidationMiddleware, composition_root_1.authController.signUpController.bind(composition_root_1.authController));
exports.authRouter.post('/registration-confirmation', apiRequestsLogMiddleware_1.apiRequestsLogMiddleware, apiRequestsLogMiddleware_1.apiRequestsCounterMiddleware, usersInputValidation_1.confirmationCodeInputValidation, inputValidationMiddleware_1.inputValidationMiddleware, composition_root_1.authController.signUpConfimationController.bind(composition_root_1.authController));
exports.authRouter.post('/registration-email-resending', apiRequestsLogMiddleware_1.apiRequestsLogMiddleware, apiRequestsLogMiddleware_1.apiRequestsCounterMiddleware, usersInputValidation_1.emailInputValidation, inputValidationMiddleware_1.inputValidationMiddleware, composition_root_1.authController.signUpEmailResendingController.bind(composition_root_1.authController));
exports.authRouter.post('/refresh-token', composition_root_1.authController.refreshTokenController.bind(composition_root_1.authController));
exports.authRouter.post('/logout', composition_root_1.authController.logoutController.bind(composition_root_1.authController));
exports.authRouter.post('/password-recovery', apiRequestsLogMiddleware_1.apiRequestsLogMiddleware, apiRequestsLogMiddleware_1.apiRequestsCounterMiddleware, usersInputValidation_1.emailInputValidation, inputValidationMiddleware_1.inputValidationMiddleware, composition_root_1.authController.passwordRecoveryController.bind(composition_root_1.authController));
exports.authRouter.post('/new-password', apiRequestsLogMiddleware_1.apiRequestsLogMiddleware, apiRequestsLogMiddleware_1.apiRequestsCounterMiddleware, usersInputValidation_1.recoveryCodeInputValidation, inputValidationMiddleware_1.inputValidationMiddleware, composition_root_1.authController.confirmPasswordRecoveryController.bind(composition_root_1.authController));
